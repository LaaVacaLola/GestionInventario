<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSales.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAABcAAAAaAAAAGgAAABoAAAAaAAAAGgAAABoAAAAaAAAAGgAA
        ABoAAAAaAAAAGgAAABoAAAAaAAAAGgAAABoAAAAaAAAAGgAAABcAAAAGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwQJS6PJFVp2Sddc9snXXPbJ11z2yddc9snXXPbJ11z2ydd
        c9snXXPbJ11z2yddc9snXXPbJ11z2yddc9snXXPbJ11z2yddc9snXnTbJFZq2RAmL5IAAAAOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBAQAAAAAPjJ1kPNTxPL/RajP/0Oky/9DpMv/Q6TL/0Ok
        y/9DpMv/Q6TL/0Oky/9DpMv/Q6TL/0Oky/9DpMv/Q6TL/0Oky/9DpMv/Q6TL/0SlzP9Pver/MneT9QAA
        AEICBAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMGCAACBAVKS46s+k+Usv9ncHT/iJCT/4mR
        k/+JkZP/iZGT/4iQk/+GjpD/hY2Q/4WNkP+FjZD/hY2Q/4WNkP+FjZD/hY2Q/4WNkP+Hj5H/anF0/zyF
        ov88jrD7AwYHTgMICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAYIAAIEBUpRj6v6U4uk/768
        uv/p5uT/wL68/8C+u//Avrv/xsTC//Lw7v/++/n///z6///8+v///Pr///z6///8+v///Pr///z6///9
        +//Gw8H/P4Oe/zuNr/sDBgdOAwgKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBggAAgQFSlGP
        q/pTi6T/v727/5yanf84MXX/SkGX/0Q7lf87NmT/zcvI/9XT0f+8u7n/vby6/728uv+9vLr/vby6/728
        uv+9u7r/4eDe/8XCwP8/g57/O42v+wMGB04DCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQG
        CAACBAVKUY+r+lOLpP+/vbv/mJWc/3ZqwP/Cuf//g3f1/0U9jf/Jx8T/wb++/56cm/+fnpz/n56c/5+e
        nP+fnpz/n56c/56dnP/U0tH/xcLA/z+Dnv87ja/7AwYHTgMICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABAYIAAIEBUpRj6v6U4uk/7+9u/+Ylpz/c2XB/6OR//+5rv7/VE2P/8jHxP/Rz83/trSz/7e1
        tP+3tbT/t7W0/7e1tP+3tbT/trWz/9/d2//FwsD/P4Oe/zqMrvwCBAZ/AAAAFgEAAQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAEBggAAgQFSlGPq/pTi6T/v727/5mXmv9HO4n/X061/2JVs/8+OWz/ysjG/8TD
        wf+joqD/pKOi/6Sjov+ko6L/pKOi/6Sjov+koqH/1tXT/8XCwP8/g57/O4yu/zQsZP0dGDeaAAAAAwAA
        AAoAAAAIAAAAAAAAAAAAAAAAAAAAAAQGCAACBAVKUY+r+lOLpP+8urn/2tjX/6SipP+lo6X/pKKk/6qp
        qv/q6Ob/+/n3//z6+P/8+vj//Pr4//z6+P/8+vj//Pr4//z6+P/9+/n/xMG//z+Dnv87jK//TkOm/zwy
        eOIHBgt1JyBJtx0YN58AAAAYAQECAAAAAAAAAAAABAYIAAIEBUpRj6v6U4uk/7u5uP/w7uz/1dPT/9TS
        0v/T0tL/2dfX//Px8P/6+Pb/+vj2//r49v/6+Pb/+vj2//r49v/6+Pb/+vj2//z6+P/Ewb//P4Oe/zuM
        rv9FPKT/aFfb/1VHr/5sWt7/YlK8/xwYNp4AAAAGAAAAAAAAAAAEBggAAgQFSlGPq/pTi6T/vry7/6Si
        nv9rXTX/hnM+/4ZzPv9iWDz/z87N/+De3f/Pzcv/z87M/8/OzP/Pzsz/z87M/8/OzP/Pzcz/6efm/8TC
        wP8/g57/O4uu/zoyj/9jU+r/Z1fx/2VV7v9rWt7/KCFKtQAAAAkAAAAAAAAAAAQGCAACBAVKUY+r+lOL
        pP++vLv/npuU/7mkWv/446X/9duU/4t3Pv/HxsX/t7a0/46NjP+Qj47/kI+O/5CPjv+Qj47/kI+O/4+O
        jf/NzMr/xcPA/z+Dnv87jK3/R0ZV/0U/eP9VSMz/Zlfx/1RHsP8LCRRzAAAAAAAAAAAAAAAABAYIAAIE
        BUpRj6v6U4uk/768u/+em5T/vKle///30f/65q3/jHc9/8jGxv/b2tj/xsXD/8fGxP/HxsT/x8bE/8fG
        xP/HxsT/x8XE/+bk4v/EwsD/P4Oe/zyNrv+rrKv/xcXC/0A7cP9gUeT/ZlbY/zsxdeIbFjOWAAAAFwEB
        AgAEBggAAgQFSlGPq/pTi6T/vr27/5yalP+Ug0T/xbFk/8KsYP9zYzX/yMfG/7q4t/+SkZD/lJOR/5ST
        kf+Uk5H/lJOR/5STkf+TkpH/z83M/8XCwP8/g57/PI2u/6usrf//////bmx6/09Cwv9lVe//cV/x/1BC
        mPgCAgNHBAMHAAQGCAACBAVKUY+r+lOLpP+9u7n/z83L/5CNhv+TkIf/k4+G/5aTjv/l4+H/+/n3//v5
        9//7+ff/+/n3//v59//7+ff/+/n3//v59//8+vj/xMG//z+Dnv88ja7/q6yt//////9ubHr/T0LC/2RV
        7/9wXvH/UEKY+AICA0cEAwcABAYIAAIEBUpRj6v6U4uk/7u5t//+/Pr//fr5//z5+P/8+fj//fr5//n3
        9f/49vT/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+Pb0//v59//Ewb//P4Oe/zyNrv+rrKv/xcXC/0A7
        cP9gUeT/ZlXY/zoxdOMaFjKYAAAAGAEBAgAEBggAAgQFSlGPq/pTi6T/vbu6/8XEwv91fnj/d4N8/3iD
        fP9/hID/4d/d//r49v/49vT/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+/n3/8TBv/8/g57/O4yt/0dH
        Vf9FP3j/VUjL/2ZX8f9VR7H/DAoVdQAAAAEAAAAAAAAAAAQGCAACBAVKUY+r+lOLpP+/vbv/l5qX/02N
        bv94v5z/XLaJ/z9uV//JxsX/srGv/4eGhP+Ih4b/iIeG/4iHhv+Ih4b/iIeG/4iHhf/KyMf/xcPB/z+D
        nv87i67/OjKP/2JT6v9mV/H/ZVXt/2ta3v8nIUq3AAAACQAAAAAAAAAABAYIAAIEBUpRj6v6U4uk/7+8
        u/+YnJj/gLOc/8r14v+m6Mf/TIFm/8nGxf/j4d//0tDO/9LRz//S0c//0tHP/9LRz//S0c//0tHP/+vp
        5//Ewr//P4Oe/zuMrv9FPKT/Z1fb/1VHsP5rWt7/YlG8/xwXNJ8AAAAHAAAAAAAAAAAEBggAAgQFSlGP
        q/pTi6T/v7y7/5mcmf9jqor/heG4/6PnyP9Wgmz/yMXE/7Cvrv+Eg4L/hoWD/4aFg/+GhYP/hoWD/4aF
        g/+FhIP/ycfF/8XDwf8/g57/O4yv/01Cpv88MnnhBwYMcychSrcdGDefAAAAGQEBAgAAAAAAAAAAAAQG
        CAACBAVKUY+r+lOLpP++vLv/qKim/0pmWf9We2r/VHln/0xgVf/T0c//6efl/9za2f/d29n/3dvZ/93b
        2f/d29n/3dvZ/9zb2f/v7ev/xMG//z+Dnv87jK7/NCxk/R0YOJgAAAADAAAACgAAAAgAAAAAAAAAAAAA
        AAAAAAAABAYIAAIEBUpRj6v6U4uk/727uv/29PL/4t/e/+Le3f/f29r/4N3c//Lw7v/29fP/9/Xz//f1
        8//39fP/9/Xz//n39f/8+vj//Pr4///9+//Gw8H/P4Oe/zqMrvwCBAZ/AAAAFgEAAQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAEBwgAAgQFSlGPq/pSi6X/mZaV/87Lyf/Mycf/xsTC/3t5d/9hX13/YV9d/2Ff
        Xf9hX13/YV9d/2JfXv9hX13/bmxr/7y6uP/Lycb/zcrI/6Ccmv89gp7/O46v+wMGCE4DCAoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMFBgAAAABETIag92u84P9PgZf/UYGX/1KCmP9HcYT/Ky0t/1BG
        P/9QR0D/UEdA/1BHQP9ORT7/SUA5/0lAOf8sKSf/PmN0/1KDmf9SgZf/ToCW/1C03f83haT4AQIDSAIG
        BwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAABcjPUm3SH+Y9UyGofVLhaD1TIeh9UBz
        ivc6PDz+eGxk/3htZf94bGT/d2xk/3ZrY/9qYFj/WU5H/zQwLf84ZHj4TIah9kuFn/ZKhZ/2OHyY9hk8
        SroAAAAZAAEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAAA7AAAAPwAA
        AD8AAAA+AAAATCAdG8tDPTnuQjw371tTTf16b2f/ZFtU/kI8N/E2MCztHRkX3AAAAF0AAAA+AAAAQAAA
        AEAAAAA8AAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAHwAAAC0AAABENC8r4HVqY/9DPTjzAAAAWwAAACwAAAAkAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMSEQ91Likm1BgWFJIAAAANAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAATAAAABgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////8AAAf+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAB/gAAAD4AA
        AAeAAAADgAAAA4AAAAOAAAABgAAAAYAAAAGAAAABgAAAA4AAAAOAAAADgAAAB4AAAA+AAAB/gAAA/4AA
        AP+AAAD/wAAB//4AP///wf///+P///////8=
</value>
  </data>
</root>